[project]
name = "mcp-toolkit"
version = "0.1.0"
description = "A modular MCP (Model Context Protocol) toolkit for building extensible tool services"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
dependencies = [
    "aiohttp>=3.9.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "click>=8.0.0",
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
]

[project.scripts]
mcp-toolkit = "mcp_toolkit.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_toolkit"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["src"]
addopts = [
    "--cov=mcp_toolkit",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=75",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = ["tests/", "build/", "dist/"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
    | \.venv
    | build
    | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-asyncio>=0.21.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "bandit>=1.8.5",
    "black>=25.1.0",
    "isort>=6.0.1",
    "safety>=3.5.0",
]
